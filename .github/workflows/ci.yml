name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Ensure this matches your project's Node.js version requirements

      # Step 3: Install dependencies for Node.js
      - name: Install Node.js Dependencies
        run: npm install

      # Step 4: Run Node.js tests
      - name: Run Node.js Tests
        run: npm test

      # Step 5: Lint Node.js Code
      - name: Lint Node.js Code
        run: npm run lint

      # Step 6: Set up Go environment
      - name: Set up Go Environment
        uses: actions/setup-go@v5.1.0
        with:
          go-version: '1.18'  # Specify the required Go version
          check-latest: true  # Always fetch the latest patch for the specified version
          cache: true         # Enable caching for faster builds

      # Step 7: Cache Go dependencies (optional for performance optimization)
      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 8: Install Go dependencies
      - name: Install Go Dependencies
        run: go mod tidy

      # Step 9: Run Go tests
      - name: Run Go Tests
        run: go test ./... -v

      # Step 10: Run Go linting (requires golangci-lint or similar)
      - name: Lint Go Code
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run


